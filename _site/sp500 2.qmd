---
title: "S&P 500 Historical Returns"
format:
  html:
    theme: cosmo
execute:
  echo: false
  warning: false
  message: false
---

## S&P 500 Analysis {.tabset}

#### Monthly Returns

The below shows the monthly change in S&P500 returns. 

```{r}
library(tidyverse)
library(gt)
library(gtExtras)
library(glue)

# Access sp500 data from downloaded data (https://fred.stlouisfed.org/series/SP500)
sp500 <- read_csv('sp500.csv')

# Ensure Date is parsed correctly
sp500_monthly <- sp500 %>%
  rename(Date = observation_date, Value = SP500) %>%
  mutate(Date = as.Date(Date)) %>%
  arrange(Date) %>%
  fill(Value, .direction = "down") %>%
  mutate(
    Year = lubridate::year(Date),
    Month = lubridate::month(Date, label = TRUE, abbr = TRUE),
    Month = factor(Month, levels = month.abb, ordered = TRUE)
  ) %>%
  mutate(Month = factor(Month, levels = month.abb, ordered = TRUE)) %>%
  group_by(Year, Month) %>%
  summarise(Close = last(Value), .groups = "drop") %>%
  arrange(Year, Month) %>%
  group_by(Year) %>%
  mutate(Return = 100 * (Close / lag(Close) - 1)) %>%
  ungroup()

# Pivot to wide format
heatmap_data <- sp500_monthly %>%
  select(Year, Month, Return) %>%
  pivot_wider(names_from = Month, values_from = Return) %>%
  arrange(desc(Year)) %>%
  select(Year, all_of(month.abb))

# Create heatmap-style gt table
heatmap_data %>%
arrange(desc(Year)) %>%
gt() %>%
  gtExtras::gt_color_rows(
    columns = -Year,
    palette = "RdBu",
    domain = c(-10, 10)
  ) %>%
  fmt_number(columns = -Year, decimals = 1, suffix = "%") %>%
  tab_header(title = md("**S&P 500 Monthly Performance**"),
             subtitle = glue("Month over month performance of the S&P500 index.")) %>%
  tab_source_note(
    source_note = md("DATA: FRED<br>TABLE: @steodosescu")) %>% 
    tab_options(
        column_labels.background.color = "white",
        table.border.top.width = px(3),
        table.border.top.color = "white",
        table.border.bottom.color = "white",
        table.border.bottom.width = px(3),
        column_labels.border.top.width = px(3),
        column_labels.border.top.color = "white",
        column_labels.border.bottom.width = px(3),
        column_labels.border.bottom.color = "black",
        data_row.padding = px(3),
        source_notes.font.size = 12,
        table.font.size = 16,
        heading.align = "center"
    ) %>% 
    tab_style(
        style = cell_text(weight = "bold"),
        locations = cells_column_labels(everything())
        ) 


```


#### Daily Chart

```{r}
library(plotly)

sp500 <- sp500 %>%
  rename(Date = observation_date, Value = SP500) %>%
  mutate(Date = as.Date(Date)) %>%
  arrange(Date)

  # Create interactive Plotly line chart
plot_ly(sp500, x = ~Date, y = ~Value, type = 'scatter', mode = 'lines') %>%
  layout(
    title = "Daily S&P 500 Price",
    xaxis = list(title = "Date"),
    yaxis = list(title = "S&P 500 Value")
  )


```

